
@model DemoWebApplication.AccountMaster
@{
    List<SelectListItem> UserType = new List<SelectListItem>();
    UserType.Add(new SelectListItem
    {
        Text = "",
        Value = "0",
    });
    UserType.Add(new SelectListItem
    {
        Text = "Customer",
        Value = "Customer",
    });
    UserType.Add(new SelectListItem
    {
        Text = "Supplier",
        Value = "Supplier",
    });
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class=" form-horizontal" id="myDIV">
        <h4>New Customer</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.AccountCode)

        <div class="form-group">
            @Html.LabelFor(model => model.AccountName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccountName, new { htmlAttributes = new { @class = "form-control", @id = "txt_custName" } })
                @Html.ValidationMessageFor(model => model.AccountName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class=" form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class=" form-group">
            @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class=" col-md-10">
                @Html.EditorFor(model => model.MobileNo, new { htmlattributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DateofBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateofBirth, new { htmlAttributes = new { @type = "date", Value = DateTime.Now, @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateofBirth, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.UserType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.UserType, UserType,"Select", new { htmlAttributes = new { @class = "col-md-10 form-control"} })
                @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" id="btn_Save" runat="server" onclick="btn_Save_Click" OnClientClick="javascript:return Validations();" />
                <input type="button" value="Cancle" class="btn btn-default" id="btn_Cancle" onclick="ClearAll()" />
            </div>
        </div>
    </div>

}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@*@if (TempData["Msg"] != null)
    {
        <script type="text/javascript">
            document.getElementById("btn_Save").onclick = function MyMsg() {
                    alert("@TempData["Msg"]");
                   // document.getElementById('UserName').value = "";
                   // document.getElementById('Password').value = "";
            };


        </script>
    }*@
<script language="javascript" type="text/javascript">
    function Validations() {
        if (CheckValidations('<%=txt_custName%>', 'Enter Customer name'))
            return true;
        return false;
    }
</script>






