@model DemoWebApplication.Models.SalesInvoice

@{
    Layout = null;
    if (ViewBag.Message != null)
    {
        <script type="text/javascript">
            alert(@Html.Raw(Json.Encode(ViewBag.Message)));
        </script>
    }
}
<div style="align-content:center"><h3>Sales Invoice</h3></div>

@Styles.Render("~/Content/css")
@Scripts.Render("~/bundles/modernizr")

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-horizontal col-md-12">
        <div class="col-md-4">
            <div class="form-group">
                @Html.HiddenFor(x => x.Accountnumber)
                @Html.LabelFor(x => x.Accountname, "Cust. Name", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownListFor(x => x.Accountname, Model.lst_CustomerNameList, "--Select Name--", new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Accountname, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.CAddress, "Address", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(x => x.CAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.CAddress, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Phoneno, "Mobile No", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(x => x.Phoneno, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.Phoneno, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(x => x.Billno, "Bill No", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(x => x.Billno, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.Billno, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Invoicedate, "Bill Date", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(x => x.Invoicedate, "", new { htmlAttributes = new { @type = "date", @class = "form-control datepicker", @Value = Model.Invoicedate.ToString("yyyy-MM-dd") } })
                    @Html.ValidationMessageFor(x => x.Invoicedate, "", new { @class = "text=danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Duedate, "Due Date", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(x => x.Duedate, "", new { htmlAttributes = new { @type = "date", @class = "form-control datepicker", @Value = Model.Duedate.ToString("yyyy-MM-dd") } })
                    @Html.ValidationMessageFor(x => x.Duedate, "", new { @class = "text=danger" })
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(x => x.Manualno, "Manual No", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(x => x.Manualno, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.Manualno, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.PaymentmodeCash, "Payment Mode", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.RadioButtonFor(x => x.PaymentmodeCash, "Cash", new { @checked = "checked" })
                    @Html.Label("Cash")
                    @*<label class="btn btn-outline-primary">Cash</label>*@
                    @Html.RadioButtonFor(x => x.PaymentmodeCash, "Credit")
                    @Html.Label("Credit")
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-4"></label>
                <div class="col-md-8">
                    @Html.CheckBoxFor(x => x.ApplyGst)
                    @Html.Label("Don't Apply Gst")
                </div>
            </div>
        </div>
    </div>
    <hr />
    <div class="form-horizontal col-md-12">
        <div class="form-group col-md-3">
            @Html.LabelFor(x => x.Itemdetailid, "Item Name", htmlAttributes: new { @class = "control-label " })
            @Html.DropDownListFor(x => x.Itemdetailid, Model.lst_ItemName, "", new { @class = "form-control " })
        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(x => x.qty, "Qty", htmlAttributes: new { @class = "control-label " })
            @Html.EditorFor(x => x.qty, new { htmlAttributes = new { @class = "form-control " } })
        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(x => x.MRP, "Price", htmlAttributes: new { @class = "control-label " })
            @Html.EditorFor(x => x.MRP, new { htmlAttributes = new { @class = "form-control " } })
        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(x => x.disc, "Disc %", htmlAttributes: new { @class = "control-label " })
            @Html.EditorFor(x => x.disc, new { htmlAttributes = new { @class = "form-control " } })
        </div>
    </div>
    <div>
        @* Grid Design *@
        <table class="table" border="1" id="tbl_sales">
            <thead>
                <tr>
                    <th >Item Code</th>
                    <th>Item Name</th>
                    <th>Batch </th>
                    <th>Godown</th>
                    <th>Expiry Date</th>
                    <th>HSN Code</th>
                    <th>Qty</th>
                    <th>Prise</th>
                    <th>Disc %</th>
                    <th>Disc Amt</th>
                    <th>Net Amt</th>
                    <th>GST %</th>
                    <th>ISTAMT</th>
                    <th>SGSTAMT</th>
                    <th>CGSTAMT</th>
                    <th>Total Amt</th>
                    <th>MRP</th>
                    <th>Pur.Prise</th>
                    <th>Sr</th>
                </tr>
            </thead>
            <tbody>

            </tbody>
        </table>
    </div>
    <div class="form-horizontal col-md-12">
        @* Footer *@
        <div class="col-md-4"></div>
        <div class="col-md-4">
            <div class="form-group" style="height:35px">

            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Paidamount, "Paid Amount", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(x => x.Paidamount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.Paidamount, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Balanceamount, "Balance Amount", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(x => x.Balanceamount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.Balanceamount, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(x => x.NetAmout, "Net Amount", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(x => x.NetAmout, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.NetAmout, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.GstAmount, "GST Amount", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(x => x.GstAmount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.GstAmount, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Totalbillamount, "Total Amount", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(x => x.Totalbillamount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.Totalbillamount, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
    </div>
    <div class="form-horizontal">
        <div class="col-md-offset-5">
            <input type="submit" id="btn_save" value="Save" />
        </div>
    </div>
}

